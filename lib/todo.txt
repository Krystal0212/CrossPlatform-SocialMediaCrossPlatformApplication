pop scope cases

reusable alert dialog
emit success of new user ?
dispose cubit ?
boilerplate of alertdialog


Put in JS FB Functions =>
It ensures the encryption key is kept server-side, preventing exposure in the Flutter app, which can be reverse-engineered.

SessionID =>
Problem: If someone else gets the OTP, they could use it to impersonate the user.
Solution: Store the OTP alongside a unique identifier as session ID for the user. Verify that the OTP is used in the correct context.

Encrypt Link =>
If the database is compromised or the linked is leaked, attackers could retrieve OTPs.
Solution: Encrypt the link before sent to user

Encrypt Otp In Firebase =>
If there an leaks in firestore firebase access rules, attackers could get the otp
Solution: Encrypt the OTP before storing it and decrypt it during verification.

IP address allow =>
Problem: An attacker could steal the OTP and use it from a different device or location.
Solution: Bind the OTP to the user's IP address or device fingerprint. Reject OTPs submitted from a different IP or device.

Expire the OTP After Use =>
Problem: An attacker could reuse an OTP after it has been used.
Solution: Delete the OTP from the database immediately after successful verification.

At the end : change iv and key value